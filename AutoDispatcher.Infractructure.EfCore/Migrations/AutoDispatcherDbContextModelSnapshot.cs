// <auto-generated />
using System;
using AutoDispatcher.Infrastructure.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AutoDispatcher.Infractructure.EfCore.Migrations
{
    [DbContext(typeof(AutoDispatcherDbContext))]
    partial class AutoDispatcherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutoDispatcher.Domain.Model.DailySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RouteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TransportVehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("RouteId");

                    b.HasIndex("TransportVehicleId");

                    b.ToTable("DailySchedules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DriverId = 1,
                            EndTime = new DateTime(2025, 3, 18, 20, 0, 0, DateTimeKind.Utc),
                            RouteId = 1,
                            StartTime = new DateTime(2025, 3, 18, 8, 0, 0, DateTimeKind.Utc),
                            TransportVehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            DriverId = 2,
                            EndTime = new DateTime(2025, 3, 19, 8, 0, 0, DateTimeKind.Utc),
                            RouteId = 3,
                            StartTime = new DateTime(2025, 3, 18, 12, 0, 0, DateTimeKind.Utc),
                            TransportVehicleId = 2
                        },
                        new
                        {
                            Id = 3,
                            DriverId = 3,
                            EndTime = new DateTime(2025, 3, 18, 18, 0, 0, DateTimeKind.Utc),
                            RouteId = 5,
                            StartTime = new DateTime(2025, 3, 18, 10, 0, 0, DateTimeKind.Utc),
                            TransportVehicleId = 3
                        },
                        new
                        {
                            Id = 4,
                            DriverId = 1,
                            EndTime = new DateTime(2025, 3, 19, 20, 0, 0, DateTimeKind.Utc),
                            RouteId = 4,
                            StartTime = new DateTime(2025, 3, 19, 10, 0, 0, DateTimeKind.Utc),
                            TransportVehicleId = 1
                        },
                        new
                        {
                            Id = 5,
                            DriverId = 3,
                            EndTime = new DateTime(2025, 3, 19, 20, 0, 0, DateTimeKind.Utc),
                            RouteId = 2,
                            StartTime = new DateTime(2025, 3, 19, 8, 0, 0, DateTimeKind.Utc),
                            TransportVehicleId = 2
                        });
                });

            modelBuilder.Entity("AutoDispatcher.Domain.Model.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("DriverLicenseNumber")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "г. Выдумка, ул. Веселая, д. 1",
                            DriverLicenseNumber = "0001",
                            FullName = "Козлов Алексей Григорьевич",
                            PassportNumber = "101010",
                            PhoneNumber = "+79601010101"
                        },
                        new
                        {
                            Id = 2,
                            Address = "г. Выдумка, ул. Хорошая, д. 10",
                            DriverLicenseNumber = "0002",
                            FullName = "Петров Максим Евгеньевич",
                            PassportNumber = "202020",
                            PhoneNumber = "+79601010102"
                        },
                        new
                        {
                            Id = 3,
                            Address = "г. Выдумка, ул. Замечательная, д. 100",
                            DriverLicenseNumber = "0003",
                            FullName = "Лопаткин Иван Викторович",
                            PassportNumber = "303030",
                            PhoneNumber = "+79601010103"
                        });
                });

            modelBuilder.Entity("AutoDispatcher.Domain.Model.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("RouteNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Routes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Внутригородской",
                            RouteNumber = "A-1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Внутригородской (расширенный)",
                            RouteNumber = "A-2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Межгород (ближний)",
                            RouteNumber = "Б-1"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Межгород (дальний)",
                            RouteNumber = "Б-2"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Туристический (спецзаказ)",
                            RouteNumber = "В-1"
                        });
                });

            modelBuilder.Entity("AutoDispatcher.Domain.Model.TransportVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LicensePlate")
                        .HasColumnType("text");

                    b.Property<int?>("MaxCapacity")
                        .HasColumnType("integer");

                    b.Property<string>("ModelName")
                        .HasColumnType("text");

                    b.Property<string>("VehicleType")
                        .HasColumnType("text");

                    b.Property<int?>("YearOfManufacture")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TransportVehicles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LicensePlate = "К100КК63",
                            MaxCapacity = 28,
                            ModelName = "Ford Transit",
                            VehicleType = "Маршрутное такси",
                            YearOfManufacture = 2021
                        },
                        new
                        {
                            Id = 2,
                            LicensePlate = "А200АА63",
                            MaxCapacity = 70,
                            ModelName = "MAN Lion's City",
                            VehicleType = "Автобус",
                            YearOfManufacture = 2017
                        },
                        new
                        {
                            Id = 3,
                            LicensePlate = "У300УУ63",
                            MaxCapacity = 10,
                            ModelName = "Lincoln Town Car",
                            VehicleType = "Лимузин",
                            YearOfManufacture = 2018
                        });
                });

            modelBuilder.Entity("AutoDispatcher.Domain.Model.DailySchedule", b =>
                {
                    b.HasOne("AutoDispatcher.Domain.Model.Driver", "Driver")
                        .WithMany("DailySchedules")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoDispatcher.Domain.Model.Route", "Route")
                        .WithMany("DailySchedules")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoDispatcher.Domain.Model.TransportVehicle", "TransportVehicle")
                        .WithMany("DailySchedules")
                        .HasForeignKey("TransportVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Route");

                    b.Navigation("TransportVehicle");
                });

            modelBuilder.Entity("AutoDispatcher.Domain.Model.Driver", b =>
                {
                    b.Navigation("DailySchedules");
                });

            modelBuilder.Entity("AutoDispatcher.Domain.Model.Route", b =>
                {
                    b.Navigation("DailySchedules");
                });

            modelBuilder.Entity("AutoDispatcher.Domain.Model.TransportVehicle", b =>
                {
                    b.Navigation("DailySchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
